#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para gerar automaticamente todas as 80 atividades detalhadas
do cronograma socioeducativo 2025 em formato Markdown com Marp
"""

import os
import subprocess
from datetime import datetime, timedelta

# Configura√ß√£o base
BASE_DIR = r"c:\Users\corde\OneDrive\Desktop\informatica basica\socioeducativo\atividades"
PDF_DIR = BASE_DIR

# Cronograma completo das 80 atividades
CRONOGRAMA = {
    # SETEMBRO 2025
    "01/09": {"tipo": "masculino", "titulo": "Microsoft Word: Criando Curr√≠culo Profissional", "cor": "#f0f8ff"},
    "02/09": {"tipo": "feminino", "titulo": "Reda√ß√£o Criativa: Escrevendo sua Hist√≥ria", "cor": "#fdf5ff"},
    "03/09": {"tipo": "masculino", "titulo": "Excel B√°sico: Planilha de Controle Pessoal", "cor": "#f0f8ff"},
    "04/09": {"tipo": "feminino", "titulo": "Design no Word: Convites e Cart√µes", "cor": "#fdf5ff"},
    "05/09": {"tipo": "masculino", "titulo": "Inform√°tica B√°sica: Hardware e Software", "cor": "#f0f8ff"},
    
    "08/09": {"tipo": "masculino", "titulo": "Excel Avan√ßado: Gr√°ficos e An√°lises", "cor": "#f0f8ff"},
    "09/09": {"tipo": "feminino", "titulo": "Prepara√ß√£o para Entrevistas", "cor": "#fdf5ff"},
    "10/09": {"tipo": "masculino", "titulo": "PowerPoint: Apresenta√ß√£o Profissional", "cor": "#f0f8ff"},
    "11/09": {"tipo": "feminino", "titulo": "Comunica√ß√£o Escrita Feminina", "cor": "#fdf5ff"},
    "12/09": {"tipo": "masculino", "titulo": "Introdu√ß√£o √† Programa√ß√£o Web", "cor": "#f0f8ff"},
    
    "15/09": {"tipo": "masculino", "titulo": "HTML e CSS B√°sico", "cor": "#f0f8ff"},
    "16/09": {"tipo": "feminino", "titulo": "Organiza√ß√£o Pessoal Digital", "cor": "#fdf5ff"},
    "17/09": {"tipo": "masculino", "titulo": "Excel para Neg√≥cios", "cor": "#f0f8ff"},
    "18/09": {"tipo": "feminino", "titulo": "PowerPoint Criativo", "cor": "#fdf5ff"},
    "19/09": {"tipo": "masculino", "titulo": "Sistemas Operacionais", "cor": "#f0f8ff"},
    
    "22/09": {"tipo": "masculino", "titulo": "Manuten√ß√£o de Computadores", "cor": "#f0f8ff"},
    "23/09": {"tipo": "feminino", "titulo": "Controle Financeiro Familiar", "cor": "#fdf5ff"},
    "24/09": {"tipo": "masculino", "titulo": "Desenvolvimento Web Intermedi√°rio", "cor": "#f0f8ff"},
    "25/09": {"tipo": "feminino", "titulo": "Cria√ß√£o de Material Educativo", "cor": "#fdf5ff"},
    "26/09": {"tipo": "masculino", "titulo": "Business Intelligence B√°sico", "cor": "#f0f8ff"},
    
    # OUTUBRO 2025
    "01/10": {"tipo": "masculino", "titulo": "Empreendedorismo Digital", "cor": "#f0f8ff"},
    "02/10": {"tipo": "feminino", "titulo": "Moda e Beleza Digital", "cor": "#fdf5ff"},
    "03/10": {"tipo": "masculino", "titulo": "Automa√ß√£o com Excel", "cor": "#f0f8ff"},
    
    "06/10": {"tipo": "masculino", "titulo": "Gest√£o Industrial B√°sica", "cor": "#f0f8ff"},
    "07/10": {"tipo": "feminino", "titulo": "Organiza√ß√£o Culin√°ria", "cor": "#fdf5ff"},
    "08/10": {"tipo": "masculino", "titulo": "Projetos T√©cnicos", "cor": "#f0f8ff"},
    "09/10": {"tipo": "feminino", "titulo": "Maternidade e Organiza√ß√£o", "cor": "#fdf5ff"},
    "10/10": {"tipo": "masculino", "titulo": "Gest√£o de Projetos", "cor": "#f0f8ff"},
    
    "13/10": {"tipo": "masculino", "titulo": "Cria√ß√£o de Jogos Simples", "cor": "#f0f8ff"},
    "14/10": {"tipo": "feminino", "titulo": "Arte Digital Feminina", "cor": "#fdf5ff"},
    "15/10": {"tipo": "masculino", "titulo": "An√°lise Financeira", "cor": "#f0f8ff"},
    "16/10": {"tipo": "feminino", "titulo": "Est√©tica e Bem-estar", "cor": "#fdf5ff"},
    "17/10": {"tipo": "masculino", "titulo": "Controle Automotivo", "cor": "#f0f8ff"},
    
    "20/10": {"tipo": "masculino", "titulo": "Fitness e Sa√∫de Masculina", "cor": "#f0f8ff"},
    "21/10": {"tipo": "feminino", "titulo": "Compras Inteligentes", "cor": "#fdf5ff"},
    "22/10": {"tipo": "masculino", "titulo": "Gest√£o Esportiva", "cor": "#f0f8ff"},
    "23/10": {"tipo": "feminino", "titulo": "Artesanato Digital", "cor": "#fdf5ff"},
    "24/10": {"tipo": "masculino", "titulo": "Eletr√¥nica B√°sica", "cor": "#f0f8ff"},
    
    # NOVEMBRO 2025
    "03/11": {"tipo": "masculino", "titulo": "Constru√ß√£o Civil Digital", "cor": "#f0f8ff"},
    "04/11": {"tipo": "feminino", "titulo": "Decora√ß√£o e Design", "cor": "#fdf5ff"},
    "05/11": {"tipo": "masculino", "titulo": "Programa√ß√£o Avan√ßada", "cor": "#f0f8ff"},
    "06/11": {"tipo": "feminino", "titulo": "Educa√ß√£o Infantil", "cor": "#fdf5ff"},
    "07/11": {"tipo": "masculino", "titulo": "Tecnologia e Inova√ß√£o", "cor": "#f0f8ff"},
    
    "10/11": {"tipo": "masculino", "titulo": "Log√≠stica e Transporte", "cor": "#f0f8ff"},
    "11/11": {"tipo": "feminino", "titulo": "Eventos e Festas", "cor": "#fdf5ff"},
    "12/11": {"tipo": "masculino", "titulo": "Manuten√ß√£o Industrial", "cor": "#f0f8ff"},
    "13/11": {"tipo": "feminino", "titulo": "Jardinagem e Plantas", "cor": "#fdf5ff"},
    "14/11": {"tipo": "masculino", "titulo": "Contabilidade B√°sica", "cor": "#f0f8ff"},
    
    "17/11": {"tipo": "masculino", "titulo": "Direito Digital", "cor": "#f0f8ff"},
    "18/11": {"tipo": "feminino", "titulo": "Vida Familiar", "cor": "#fdf5ff"},
    "19/11": {"tipo": "masculino", "titulo": "Marketing Digital", "cor": "#f0f8ff"},
    "20/11": {"tipo": "feminino", "titulo": "Beleza Profissional", "cor": "#fdf5ff"},
    "21/11": {"tipo": "masculino", "titulo": "Produ√ß√£o e Qualidade", "cor": "#f0f8ff"},
    
    "24/11": {"tipo": "masculino", "titulo": "Inova√ß√£o e Startups", "cor": "#f0f8ff"},
    "25/11": {"tipo": "feminino", "titulo": "Cuidados com Beb√™s", "cor": "#fdf5ff"},
    "26/11": {"tipo": "masculino", "titulo": "Ci√™ncia e Pesquisa", "cor": "#f0f8ff"},
    "27/11": {"tipo": "feminino", "titulo": "Entretenimento Infantil", "cor": "#fdf5ff"},
    "28/11": {"tipo": "masculino", "titulo": "Automa√ß√£o Residencial", "cor": "#f0f8ff"},
    
    # DEZEMBRO 2025
    "01/12": {"tipo": "masculino", "titulo": "Projeto Natal Masculino", "cor": "#f0f8ff"},
    "02/12": {"tipo": "feminino", "titulo": "Natal Feminino Especial", "cor": "#fdf5ff"},
    "03/12": {"tipo": "masculino", "titulo": "Fechamento Anual", "cor": "#f0f8ff"},
    "04/12": {"tipo": "feminino", "titulo": "Retrospectiva Feminina", "cor": "#fdf5ff"},
    "05/12": {"tipo": "masculino", "titulo": "Avalia√ß√£o de Desempenho", "cor": "#f0f8ff"},
    
    "08/12": {"tipo": "masculino", "titulo": "Tecnologia e Games", "cor": "#f0f8ff"},
    "09/12": {"tipo": "feminino", "titulo": "Sonhos e Realiza√ß√µes", "cor": "#fdf5ff"},
    "10/12": {"tipo": "masculino", "titulo": "Projetos de Fim de Ano", "cor": "#f0f8ff"},
    "11/12": {"tipo": "feminino", "titulo": "Arte e Express√£o", "cor": "#fdf5ff"},
    "12/12": {"tipo": "masculino", "titulo": "Networking Profissional", "cor": "#f0f8ff"},
    
    "15/12": {"tipo": "masculino", "titulo": "Competi√ß√µes e Desafios", "cor": "#f0f8ff"},
    "16/12": {"tipo": "feminino", "titulo": "Bem-estar Feminino", "cor": "#fdf5ff"},
    "17/12": {"tipo": "masculino", "titulo": "Inova√ß√£o Final", "cor": "#f0f8ff"},
    "18/12": {"tipo": "feminino", "titulo": "Gratid√£o e Reflex√£o", "cor": "#fdf5ff"},
    "19/12": {"tipo": "masculino", "titulo": "Metas 2026", "cor": "#f0f8ff"}
}

def gerar_atividade_markdown(numero, data, atividade):
    """Gera o conte√∫do markdown de uma atividade"""
    
    tipo = atividade["tipo"]
    titulo = atividade["titulo"]
    cor = atividade["cor"]
    
    # Determinar emoji e descri√ß√£o baseados no tipo
    if tipo == "masculino":
        emoji = "üî∑"
        tipo_nome = "MASCULINO"
        dia_semana = obter_dia_semana(data)
    else:
        emoji = "üî∏"
        tipo_nome = "FEMININO"  
        dia_semana = obter_dia_semana(data)
    
    # Template base da atividade
    conteudo = f"""---
marp: true
theme: default
paginate: true
backgroundColor: {cor}
---

# {emoji} ATIVIDADE {numero:02d} - {tipo_nome}
## {titulo}

**üìÖ Data:** {data}/2025 ({dia_semana})  
**‚è∞ Dura√ß√£o:** 90 minutos  
**üë• Turma:** {tipo_nome.capitalize()}  

---

## üéØ OBJETIVOS DA ATIVIDADE

### **Objetivo Geral:**
{gerar_objetivo_geral(titulo, tipo)}

### **Objetivos Espec√≠ficos:**
{gerar_objetivos_especificos(titulo, tipo)}

---

## üìö CONTE√öDO PROGRAM√ÅTICO

{gerar_conteudo_programatico(titulo, tipo)}

---

## üîß RECURSOS NECESS√ÅRIOS

{gerar_recursos_necessarios(titulo, tipo)}

---

## ÔøΩ{"üë®‚Äçüè´" if tipo == "masculino" else "üë©‚Äçüè´"} METODOLOGIA

{gerar_metodologia(titulo, tipo)}

---

## üìã ATIVIDADE PR√ÅTICA DETALHADA

{gerar_atividade_pratica(titulo, tipo)}

---

## ‚úÖ CRIT√âRIOS DE AVALIA√á√ÉO

{gerar_criterios_avaliacao(titulo, tipo)}

---

## üìÅ ENTREG√ÅVEIS

{gerar_entregaveis(titulo, tipo)}

---

## üéØ APLICA√á√ÉO PR√ÅTICA

{gerar_aplicacao_pratica(titulo, tipo)}

---

## üìà INDICADORES DE SUCESSO

{gerar_indicadores_sucesso(titulo, tipo)}

---

## üîÑ PR√ìXIMOS PASSOS

{gerar_proximos_passos(numero, titulo, tipo)}

**{"üîß" if tipo == "masculino" else "‚ú®"} Atividade completa pronta para implementa√ß√£o!**"""

    return conteudo

def obter_dia_semana(data):
    """Retorna o dia da semana em portugu√™s"""
    try:
        dia, mes = data.split('/')
        data_obj = datetime(2025, int(mes), int(dia))
        dias = ['Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado', 'Domingo']
        return dias[data_obj.weekday()]
    except:
        return "Dia da semana"

def gerar_objetivo_geral(titulo, tipo):
    """Gera objetivo geral baseado no t√≠tulo e tipo"""
    objetivos_base = {
        "masculino": "Desenvolver compet√™ncias t√©cnicas e de lideran√ßa atrav√©s de",
        "feminino": "Promover empoderamento e crescimento pessoal atrav√©s de"
    }
    
    base = objetivos_base[tipo]
    especifico = titulo.lower()
    
    return f"{base} {especifico}, aplicando conhecimentos pr√°ticos para uso profissional e pessoal."

def gerar_objetivos_especificos(titulo, tipo):
    """Gera objetivos espec√≠ficos baseados no conte√∫do"""
    if "Word" in titulo:
        return """- Dominar ferramentas avan√ßadas do Microsoft Word
- Criar documentos profissionais e atrativos
- Aplicar t√©cnicas de formata√ß√£o e design
- Desenvolver autonomia na cria√ß√£o de textos"""
    
    elif "Excel" in titulo:
        return """- Utilizar f√≥rmulas e fun√ß√µes do Excel
- Criar planilhas funcionais e organizadas
- Desenvolver gr√°ficos e an√°lises visuais
- Aplicar conceitos de an√°lise de dados"""
    
    elif "PowerPoint" in titulo:
        return """- Criar apresenta√ß√µes impactantes
- Aplicar t√©cnicas de design e comunica√ß√£o visual
- Utilizar recursos multim√≠dia adequadamente
- Desenvolver habilidades de apresenta√ß√£o"""
    
    else:
        return """- Aplicar conhecimentos pr√°ticos da √°rea
- Desenvolver autonomia e confian√ßa
- Criar solu√ß√µes para problemas reais
- Estabelecer bases para crescimento futuro"""

def gerar_conteudo_programatico(titulo, tipo):
    """Gera conte√∫do program√°tico estruturado"""
    return """### **M√ìDULO 1 - Fundamentos (30 minutos)**
- Conceitos b√°sicos e introdu√ß√£o
- Demonstra√ß√£o pr√°tica das ferramentas
- Prepara√ß√£o do ambiente de trabalho
- Orienta√ß√µes de seguran√ßa e boas pr√°ticas

### **M√ìDULO 2 - Desenvolvimento Pr√°tico (45 minutos)**
- Exerc√≠cios guiados passo a passo
- Aplica√ß√£o pr√°tica dos conceitos
- Desenvolvimento do projeto principal
- Resolu√ß√£o de d√∫vidas e dificuldades

### **M√ìDULO 3 - Finaliza√ß√£o e Avalia√ß√£o (15 minutos)**
- Revis√£o e ajustes finais
- Apresenta√ß√£o dos resultados
- Feedback e orienta√ß√µes futuras
- Salvamento e organiza√ß√£o dos arquivos"""

def gerar_recursos_necessarios(titulo, tipo):
    """Gera lista de recursos necess√°rios"""
    return """### **Hardware:**
- 1 computador por participante
- Acesso √† internet (se necess√°rio)
- Impressora para materiais finais
- Projetor para demonstra√ß√µes

### **Software:**
- Sistema operacional atualizado
- Programas espec√≠ficos da atividade
- Antiv√≠rus ativo e atualizado
- Navegador web atualizado

### **Materiais:**
- Papel para anota√ß√µes e impress√µes
- Canetas e material de apoio
- Dados/informa√ß√µes para exerc√≠cios
- Material de refer√™ncia impresso"""

def gerar_metodologia(titulo, tipo):
    """Gera metodologia espec√≠fica por tipo"""
    if tipo == "masculino":
        return """### **Estrat√©gia Pedag√≥gica:**
- **Demonstra√ß√£o t√©cnica** detalhada pelo educador
- **Pr√°tica orientada** com foco em resultados
- **Resolu√ß√£o de problemas** em tempo real
- **Competi√ß√£o saud√°vel** entre participantes

### **Abordagem Masculina:**
- Foco em efici√™ncia e produtividade
- Aplica√ß√£o pr√°tica imediata
- Desenvolvimento de autonomia t√©cnica
- Prepara√ß√£o para lideran√ßa e gest√£o"""
    else:
        return """### **Estrat√©gia Pedag√≥gica:**
- **Ambiente colaborativo** e acolhedor
- **Aprendizado compartilhado** entre participantes
- **Valoriza√ß√£o da criatividade** individual
- **Apoio m√∫tuo** e constru√ß√£o coletiva

### **Abordagem Feminina:**
- Valoriza√ß√£o da intui√ß√£o e sensibilidade
- Conex√£o emocional com o aprendizado
- Express√£o da personalidade individual
- Empoderamento atrav√©s do conhecimento"""

def gerar_atividade_pratica(titulo, tipo):
    """Gera estrutura da atividade pr√°tica"""
    return """### **ETAPA 1: Prepara√ß√£o (10 min)**
- Configura√ß√£o do ambiente de trabalho
- Verifica√ß√£o de recursos e materiais
- Apresenta√ß√£o dos objetivos espec√≠ficos
- Organiza√ß√£o dos arquivos de trabalho

### **ETAPA 2: Desenvolvimento Inicial (15 min)**
- Primeiros passos da atividade
- Configura√ß√µes b√°sicas necess√°rias
- Estabelecimento da estrutura principal
- Verifica√ß√£o do progresso inicial

### **ETAPA 3: Desenvolvimento Principal (25 min)**
- Execu√ß√£o do projeto principal
- Aplica√ß√£o das t√©cnicas aprendidas
- Personaliza√ß√£o conforme orienta√ß√µes
- Resolu√ß√£o de dificuldades encontradas

### **ETAPA 4: Refinamento (15 min)**
- Ajustes e melhorias no projeto
- Verifica√ß√£o de qualidade
- Aplica√ß√£o de detalhes finais
- Prepara√ß√£o para apresenta√ß√£o

### **ETAPA 5: Finaliza√ß√£o (10 min)**
- Salvamento em formatos adequados
- Verifica√ß√£o final de qualidade
- Organiza√ß√£o dos arquivos criados
- Prepara√ß√£o para entrega

### **ETAPA 6: Apresenta√ß√£o (15 min)**
- Demonstra√ß√£o dos resultados
- Feedback entre participantes
- Discuss√£o sobre aplica√ß√µes pr√°ticas
- Orienta√ß√µes para desenvolvimento futuro"""

def gerar_criterios_avaliacao(titulo, tipo):
    """Gera crit√©rios de avalia√ß√£o"""
    return """### **T√©cnico (40%):**
- Dom√≠nio das ferramentas utilizadas
- Qualidade t√©cnica do resultado
- Aplica√ß√£o correta dos conceitos
- Funcionamento adequado do projeto

### **Criativo (30%):**
- Originalidade na execu√ß√£o
- Personaliza√ß√£o apropriada
- Solu√ß√µes criativas para desafios
- Express√£o individual no resultado

### **Pr√°tico (30%):**
- Aplicabilidade do resultado final
- Adequa√ß√£o aos objetivos propostos
- Potencial de uso real
- Organiza√ß√£o e apresenta√ß√£o"""

def gerar_entregaveis(titulo, tipo):
    """Gera lista de entreg√°veis"""
    nome_arquivo = titulo.lower().replace(" ", "_").replace(":", "")
    nome_participante = "nome_" + ("aluno" if tipo == "masculino" else "aluna")
    
    return f"""### **Arquivo Principal:**
- **Nome:** `{nome_arquivo}_{{{nome_participante}}}.docx`
- **Formato:** Microsoft Office ou equivalente
- **Qualidade:** Profissional e bem formatado

### **Elementos Obrigat√≥rios:**
- [ ] Projeto completo conforme especifica√ß√µes
- [ ] Formata√ß√£o adequada e consistente
- [ ] Informa√ß√µes completas e corretas
- [ ] Verifica√ß√£o ortogr√°fica realizada
- [ ] Arquivos organizados adequadamente

### **Vers√µes Adicionais:**
- **PDF** para compartilhamento e arquivamento
- **Vers√£o impressa** se necess√°rio
- **Backup** em local seguro"""

def gerar_aplicacao_pratica(titulo, tipo):
    """Gera aplica√ß√µes pr√°ticas"""
    return """### **Uso Imediato:**
- Aplica√ß√£o direta no dia a dia
- Melhoria em atividades pessoais
- Desenvolvimento de projetos pr√≥prios
- Base para aprendizados futuros

### **Desenvolvimento Profissional:**
- Diferencial em processos seletivos
- Compet√™ncia para ambiente de trabalho
- Base para especializa√ß√µes futuras
- Autonomia em tarefas relacionadas

### **Crescimento Pessoal:**
- Aumento da autoconfian√ßa
- Desenvolvimento de novas habilidades
- Amplia√ß√£o de possibilidades
- Prepara√ß√£o para desafios futuros"""

def gerar_indicadores_sucesso(titulo, tipo):
    """Gera indicadores de sucesso"""
    return """### **Durante a Atividade:**
- Participa√ß√£o ativa de 100% dos alunos
- Conclus√£o exitosa das etapas propostas
- Resolu√ß√£o eficaz de dificuldades
- Ambiente de aprendizado positivo

### **Imediatamente Ap√≥s:**
- Entreg√°veis completos e de qualidade
- Satisfa√ß√£o dos participantes
- Compreens√£o clara dos conceitos
- Confian√ßa para aplica√ß√£o pr√°tica

### **M√©dio/Longo Prazo:**
- Uso cont√≠nuo dos conhecimentos
- Aplica√ß√£o em situa√ß√µes reais
- Interesse em aprofundamento
- Desenvolvimento de autonomia"""

def gerar_proximos_passos(numero, titulo, tipo):
    """Gera pr√≥ximos passos e conex√µes"""
    proxima_atividade = numero + 1 if numero < 80 else "Conclus√£o do programa"
    
    return f"""### **Atividade Seguinte:**
Atividade {proxima_atividade:02d} (pr√≥xima data do cronograma)

### **Conex√µes:**
- Refor√ßo dos conceitos em atividades futuras
- Aplica√ß√£o em projetos mais complexos
- Integra√ß√£o com outras compet√™ncias
- Prepara√ß√£o para especializa√ß√µes

### **Recomenda√ß√µes:**
- Praticar os conceitos aprendidos
- Explorar funcionalidades adicionais
- Compartilhar conhecimento com outros
- Manter arquivos organizados para refer√™ncia"""

def criar_arquivo_e_pdf(numero, data, atividade):
    """Cria arquivo markdown e gera PDF"""
    try:
        # Gerar conte√∫do
        conteudo = gerar_atividade_markdown(numero, data, atividade)
        
        # Nome do arquivo
        nome_base = f"{numero:02d}_{atividade['titulo'].replace(' ', '_').replace(':', '')}"
        arquivo_md = os.path.join(BASE_DIR, f"{nome_base}.md")
        arquivo_pdf = os.path.join(PDF_DIR, f"{nome_base}.pdf")
        
        # Criar arquivo markdown
        with open(arquivo_md, 'w', encoding='utf-8') as f:
            f.write(conteudo)
        
        print(f"‚úÖ Criado: {arquivo_md}")
        
        # Gerar PDF com Marp
        try:
            subprocess.run(['marp', arquivo_md, '-o', arquivo_pdf], 
                         check=True, capture_output=True)
            print(f"üìÑ PDF: {arquivo_pdf}")
        except subprocess.CalledProcessError as e:
            print(f"‚ö†Ô∏è  Erro ao gerar PDF para {nome_base}: {e}")
        except FileNotFoundError:
            print(f"‚ö†Ô∏è  Marp n√£o encontrado. Arquivo MD criado: {arquivo_md}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar atividade {numero}: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Iniciando gera√ß√£o das 80 atividades socioeducativas...")
    print(f"üìÅ Diret√≥rio: {BASE_DIR}")
    
    # Criar diret√≥rio se n√£o existir
    os.makedirs(BASE_DIR, exist_ok=True)
    
    sucessos = 0
    erros = 0
    
    # Gerar todas as atividades
    for numero, (data, atividade) in enumerate(CRONOGRAMA.items(), 1):
        print(f"\nüìù Atividade {numero:02d}: {atividade['titulo']} ({data})")
        
        if criar_arquivo_e_pdf(numero, data, atividade):
            sucessos += 1
        else:
            erros += 1
    
    # Relat√≥rio final
    print(f"\nüìä RELAT√ìRIO FINAL:")
    print(f"‚úÖ Sucessos: {sucessos}")
    print(f"‚ùå Erros: {erros}")
    print(f"üìÅ Total de atividades: {len(CRONOGRAMA)}")
    
    if sucessos == len(CRONOGRAMA):
        print("üéâ Todas as 80 atividades foram criadas com sucesso!")
    else:
        print(f"‚ö†Ô∏è  {erros} atividades apresentaram problemas.")

if __name__ == "__main__":
    main()
